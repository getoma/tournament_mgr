
{% macro printSlot(slot, route_param, winner) %}
{% if winner and slot.getParticipant() is same as(winner)%}<em>{%endif%}
{%-if slot.getParticipant()%}{{slot.getParticipant().lastname}}, {{slot.getParticipant().firstname}}
{%-else%}{{slot.str()}}
{%-endif%}
{% if slot.getParticipant() is same as(winner)%}</em>{%endif%}
{% endmacro %}

{% macro printMatch(node, route_param) %}
<span class="fight_participant red">{{_self.printSlot(node.slotRed, route_param, node.getWinner())}}</span> vs. <span class="fight_participant white">{{_self.printSlot(node.slotWhite, route_param, node.getWinner())}}</span>
{% endmacro %}

{% macro printChunkWinner(chunk, route_param) %}
{%-if chunk.root.getWinner()%}{{chunk.root.getWinner().lastname}}, {{chunk.root.getWinner().firstname}}
{%-elseif chunk.root.isBye()%}--
{%-else%}Gewinner {{chunk.root.name}}
{%-endif%}
{% endmacro %}

{% macro printPools(pools, route_param) %}
<ul class="pool_list">
  {% for pool in pools %}
  <li>
    <p class="pool_name">Pool {{pool.getName()}}</p>
    <ul class="participant_list">
      {% for slot in pool.participants %}
      <li>{{slot.lastname}}, {{slot.firstname}}</li>
      {% endfor %}
    </ul>
    <p class="fight_list">Kämpfe:</p>
    <ul class="fight_list">
      {% for match in pool.getMatchList() %}
      <li>{{ _self.printMatch(match, route_param) }}</li>
      {% endfor %}
    </ul>
  </li>
  {% endfor %}
</ul>
{% endmacro %}

{% macro printKo(ko, chunks, route_param) %}
<ul class="fight_tree">
  {%- if chunks is defined %}
  <li><span class="round_caption">Kampfflächen</span>
    <ul class="fight_round">
      {% for name, chunk in chunks %}
      <li><span class="fight_name"><a href="{{ url_for('show_ko_area', route_param|merge({'chunk': name})) }}">Gewinner {{chunk.name}}</a></span>
          <span class="fight_participant">{{_self.printChunkWinner(chunk, route_param)}}</span>
      </li>
      {% endfor %}
    </ul>
  </li>
  {% endif %}
  {% for round in ko %}
  <li><span class="round_caption">Runde {{loop.index}}</span>
    <ul class="fight_round">
      {% for node in round %}
      <li><span class="fight_name">Kampf {{node.name}}{% if node.area is defined %} ({{node.area.name}}){%endif%}</span>
        {{ _self.printMatch(node, route_param) }}
      </li>
      {% endfor %}
    </ul>
  </li>
  {% endfor %}
</ul>
{% endmacro %}